{"version":3,"file":"js/268.e872d740.js","mappings":"2KAAKA,MAAM,W,GAAXC,EAAAA,EAAAA,IAAA,m8/B,GAAqBC,G,kCAArBC,EAAAA,EAAAA,IA6MM,MA7MNC,EAAAC,E,aCCA,MAAMC,EAAS,CAAC,EAGVC,GAA2B,OAAgBD,EAAQ,CAAC,CAAC,SAASE,KAEpE,O","sources":["webpack://blog/./src/posts/Menu-Handling.vue","webpack://blog/./src/posts/Menu-Handling.vue?c2ca"],"sourcesContent":["<template><div class=\"content\"><h1 class=\"post-title\">Menu 组件的基本处理和实现<a class=\"header-anchor\" id=\"Menu%20%E7%BB%84%E4%BB%B6%E7%9A%84%E5%9F%BA%E6%9C%AC%E5%A4%84%E7%90%86%E5%92%8C%E5%AE%9E%E7%8E%B0\" href=\"#Menu%20%E7%BB%84%E4%BB%B6%E7%9A%84%E5%9F%BA%E6%9C%AC%E5%A4%84%E7%90%86%E5%92%8C%E5%AE%9E%E7%8E%B0\">#</a></h1><div class=\"metabar\"><div class=\"metabar-item\">2023/07/10</div><div class=\"metabar-item\">代码</div><div class=\"metabar-item\">约 14 分钟读完</div></div>\n<p><strong>Menu 组件</strong>实际上并不是一个正统的称呼，但是也算是一个比较广泛使用的习惯性称呼。还有一些其它的 <em>de facto</em> 叫法，比如 Dropdown、MenuList 等。通俗来讲就是当一个被绑定的触发器被触发后所弹出的窗口。窗口内容通常表现为有序的列表，在某些实现里还有可能有部分的分割以及标题，例如</p>\n<ul>\n<li><a href=\"https://vuetifyjs.com/en/components/menus/\" class=\"external-link\" target=\"_blank\" rel=\"noopener noreferrer\">Vuetify 的 Menu<span class=\"external-link-icon mdi mdi-launch\"></span></a></li>\n<li><a href=\"https://mui.com/material-ui/react-menu/\" class=\"external-link\" target=\"_blank\" rel=\"noopener noreferrer\">MUI 的 react-menu<span class=\"external-link-icon mdi mdi-launch\"></span></a></li>\n<li><a href=\"https://www.creative-tim.com/vuematerial/components/menu\" class=\"external-link\" target=\"_blank\" rel=\"noopener noreferrer\">VueMaterial 的 Menu<span class=\"external-link-icon mdi mdi-launch\"></span></a></li>\n<li><a href=\"https://arco.design/react/components/menu\" class=\"external-link\" target=\"_blank\" rel=\"noopener noreferrer\">Arco Design 的 Menu<span class=\"external-link-icon mdi mdi-launch\"></span></a></li>\n<li><a href=\"https://ant.design/components/menu\" class=\"external-link\" target=\"_blank\" rel=\"noopener noreferrer\">Ant Design 的 Menu<span class=\"external-link-icon mdi mdi-launch\"></span></a></li>\n</ul>\n<p>值得注意的是 Arco Design 和 Ant Design 两个国内较为成熟的方案中，都同时用到了一个概念——Navigation Menu，表现为水平或者竖直方向的导航栏。它们的表现更像是某种 Sidebar 而不是后触发的弹窗，同时也它们附带了本文中传统意义的 Menu。这一组件不是本文所讨论的范围。</p>\n<p>在本文所述的 Menu 中包含两种元素：</p>\n<ul>\n<li><strong>触发器</strong>（Activator） — 即触发 Menu 的元素，通常是 Button，在必要情况下可以是任何 <em>link-related</em><sup class=\"footnote-ref\"><a href=\"#fn1\" id=\"fnref1\">[1]</a></sup> 元素。</li>\n<li><strong>本体</strong> — 即 Menu 本体，默认应当处于隐藏的、不可点击状态</li>\n</ul>\n<div class=\"notice warning\"><p>本文中的代码仅仅作说明作用，不能保证正常运行。</p>\n</div>\n<h2>本体的定位<a class=\"header-anchor\" id=\"%E6%9C%AC%E4%BD%93%E7%9A%84%E5%AE%9A%E4%BD%8D\" href=\"#%E6%9C%AC%E4%BD%93%E7%9A%84%E5%AE%9A%E4%BD%8D\">#</a></h2>\n<p>本体应当出现在触发器附近，这是毫无疑问的。为了不挤占正常文档流的空间，而仅仅作为一个弹窗或者浮窗的存在，其理所应当具有 <code>position: absolute</code> 属性。由此推知，为了正确定位，它必须与触发器之间存在位置上的相对联系，也正因此，一般实现起来都会用到如下结构：</p>\n<div class=\"language-html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>menu-wrapper<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>menu-activator<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token special-attr\"><span class=\"token attr-name\">onclick</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value javascript language-javascript\"><span class=\"token function\">toggleMenu</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></span><span class=\"token punctuation\">\"</span></span></span><span class=\"token punctuation\">&gt;</span></span>Open Menu<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>menu<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>menu-item<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>Item 1<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>menu-item<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>Item 2<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>style</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token style\"><span class=\"token language-css\">\n<span class=\"token selector\">.menu-wrapper</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">position</span><span class=\"token punctuation\">:</span> relative<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">.menu</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">position</span><span class=\"token punctuation\">:</span> absolute<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">top</span><span class=\"token punctuation\">:</span> <span class=\"token comment\">/* ... */</span>\n<span class=\"token punctuation\">}</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>style</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>\n<p>在一些特殊的例子中，并不会用到这种含有 wrapper 的结构，而是将两者相独立，这在代码可读性和可维护性上有所帮助。然而，在这种情况下若想要实现位置的相对性，则需要用到额外的 JavaScript 代码和计算逻辑，并不是一种高效的解决方案。</p>\n<h2>本体的出现与消失<a class=\"header-anchor\" id=\"%E6%9C%AC%E4%BD%93%E7%9A%84%E5%87%BA%E7%8E%B0%E4%B8%8E%E6%B6%88%E5%A4%B1\" href=\"#%E6%9C%AC%E4%BD%93%E7%9A%84%E5%87%BA%E7%8E%B0%E4%B8%8E%E6%B6%88%E5%A4%B1\">#</a></h2>\n<p>出现与消失的实现使用正常的 active 逻辑即可，具体代码如下：</p>\n<div class=\"language-javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">toggleMenu</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> menu <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.menu'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>menu<span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">.</span><span class=\"token function\">contains</span><span class=\"token punctuation\">(</span><span class=\"token string\">'active'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        menu<span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token string\">'active'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n        menu<span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">'active'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<div class=\"language-css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">.menu</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">position</span><span class=\"token punctuation\">:</span> absolute<span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">/* ... */</span>\n\n    <span class=\"token property\">display</span><span class=\"token punctuation\">:</span> none<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">.menu.active</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">display</span><span class=\"token punctuation\">:</span> block<span class=\"token punctuation\">;</span> <span class=\"token comment\">/* depends on needs */</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>这样就实现了下面两点：</p>\n<ul>\n<li>本体的 <code>position: absolute</code> 属性确保了 Menu 不会干扰正常文档元素排布</li>\n<li>在单击触发器后，可以实现 Menu 的显示状态的切换</li>\n</ul>\n<p>由于我们切换的是 <code>display</code> 属性，其优点是可以保证在 <code>display: none</code> 状态的元素不再干扰文档中的点击事件，亦可以对此状态下的本体增加 <code>pointer-events: none</code> 的属性。然而缺点则是无法添加任何动画效果，固然是一种不成熟的方案。然而如果想要添加动画效果，就可能会带来一些另外的问题。</p>\n<h2>本体的显示—消失动画与相关问题的解决<a class=\"header-anchor\" id=\"%E6%9C%AC%E4%BD%93%E7%9A%84%E6%98%BE%E7%A4%BA%E2%80%94%E6%B6%88%E5%A4%B1%E5%8A%A8%E7%94%BB%E4%B8%8E%E7%9B%B8%E5%85%B3%E9%97%AE%E9%A2%98%E7%9A%84%E8%A7%A3%E5%86%B3\" href=\"#%E6%9C%AC%E4%BD%93%E7%9A%84%E6%98%BE%E7%A4%BA%E2%80%94%E6%B6%88%E5%A4%B1%E5%8A%A8%E7%94%BB%E4%B8%8E%E7%9B%B8%E5%85%B3%E9%97%AE%E9%A2%98%E7%9A%84%E8%A7%A3%E5%86%B3\">#</a></h2>\n<p>对于动画，我们首先想到的是与显示—消失直接相关的不透明度的调整。</p>\n<div class=\"language-css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">.menu</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">opacity</span><span class=\"token punctuation\">:</span> 0<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">transition</span><span class=\"token punctuation\">:</span> opacity .2s ease<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">.menu.active</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">opacity</span><span class=\"token punctuation\">:</span> 1<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>注意，在上面的代码中不能使用 <code>display</code> 来切换，否则会导致 transition 效果的丢失。然而没有了 <code>display</code>，即使是在 <code>opacity: 0</code> 的不可见情况下，其内容仍然存在于某个位置，比如触发器的正下方。这个时候当鼠标移动时，仍然会有相关事件的产生。</p>\n<p>为了解决这个问题，我们会自然地想到 <code>pointer-events</code> 属性，于是将其修改成这样：</p>\n<div class=\"language-css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">.menu</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">opacity</span><span class=\"token punctuation\">:</span> 0<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">transition</span><span class=\"token punctuation\">:</span> opacity .2s ease<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">pointer-events</span><span class=\"token punctuation\">:</span> none<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">.menu.active</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">opacity</span><span class=\"token punctuation\">:</span> 1<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">pointer-events</span><span class=\"token punctuation\">:</span> auto<span class=\"token punctuation\">;</span> <span class=\"token comment\">/* 不建议使用 all */</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p><code>pointer-events</code> 属性固然好用，但是不加研究仍然可能触碰到雷区。一些对 <code>pointer-events: none</code> 的肤浅理解包括，它可以让鼠标“直接透过”被应用 <code>pointer-events: none</code> 的元素而不产生任何交互。这在某些情况下也许是对的，但并不是 <code>pointer-events: none</code> 所表达的本质。<a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/pointer-events#:~:text=The%20element%20is,capture/bubble%20phases.\" class=\"external-link\" target=\"_blank\" rel=\"noopener noreferrer\">MDN 上对 <code>pointer-events: none</code> 的解释<span class=\"external-link-icon mdi mdi-launch\"></span></a>是这样说的。</p>\n<blockquote>\n<p><code>pointer-events: none</code> - The element is never the target of pointer events; however, pointer events may target its descendant elements if those descendants have pointer-events set to some other value. In these circumstances, pointer events will trigger event listeners on this parent element as appropriate on their way to/from the descendant during the event capture/bubble phases.</p>\n</blockquote>\n<p>简单而言，就是该属性仅仅屏蔽了元素自身的事件，但是对于其子代元素（descendant）的事件冒泡/监听仍然会有相关的反应。此外还有一点便是，“直接透过”的效果只能发生在被屏蔽事件的元素处于某一父元素的包装下的情况，其透过后所指对象是父元素。</p>\n<p>例如一个 box 里装了一个 button，对该 button 设置 <code>pointer-events: none</code>，那么鼠标在 button 上的 events 相当于传递给了 box，这就是“透过”。然而，如果在某种布局设定下， button 对 box 有溢出，溢出的部分位于 box 的外部，且该部分下遮挡了 button2，那么无论如何点击 button，button2 都无法接收到点击事件，因为 button2 与 button 虽然有布局上的遮挡但是没有直接的父—子关系，这一点就不能称为“透过”，而只能算作“完全遮挡”。</p>\n<p>因此，为了避免这样的意外发生，我们最好还是避免使用 <code>pointer-events</code> 事件。当然，如果 Menu 满足上述的一些条件，使用起来也不会有太大的问题。</p>\n<h3>解决方案一：<code>z-index</code> 的切换</h3>\n<p>我们的目标是将 <code>opacity: 0</code> 状态下的 Menu 完全从鼠标事件中屏蔽掉，其中可以考虑的一个方案是调整其 Z 轴层级。当然 <code>z-index</code> 也不是没有坑，比如<a href=\"https://stackoverflow.com/questions/9191803/why-does-z-index-not-work\" class=\"external-link\" target=\"_blank\" rel=\"noopener noreferrer\">所适用的对象的 <code>position</code> 值不能是 <code>static</code><span class=\"external-link-icon mdi mdi-launch\"></span></a>、<a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_positioned_layout/Understanding_z-index/Stacking_context\" class=\"external-link\" target=\"_blank\" rel=\"noopener noreferrer\">Stacking Context 创建条件(MDN)<span class=\"external-link-icon mdi mdi-launch\"></span></a>。不过，如果你有一套较为完整的 <code>z-index</code> 排列，就可以考虑这个方案。</p>\n<ul>\n<li>对 <code>opacity: 0</code> 的状态设定最低 <code>z-index</code>，可以是 <code>0</code>、<code>-1</code> 等，要求低于其父级元素的 <code>z-index</code></li>\n<li>对 <code>opacity: 1</code> 的状态设定较高 <code>z-index</code>，要求高于其父级元素（以及应当被遮挡的一些元素）的 <code>z-index</code></li>\n</ul>\n<p>这种情况下就可以避免当 <code>opacity: 0</code> 时鼠标仍然可以选中被隐藏的主体的问题。但这样做仍然不是完美的，因为对于其遮挡物，由于 <code>z-index</code> 不存在渐变的中间态，在 <code>opacity</code> 过渡的过程中会出现一些层级错乱的现象，取决于具体的层级设置。这一点如果不是强迫症，或者遮挡的区域没有样式大可以忽略。</p>\n<h3>解决方案二：<code>display</code> + <code>setTimeout</code> 排除对动画效果的影响</h3>\n<p>考虑到 <code>display: none</code> 可以直接满足我们的需求，并不一定要将其放弃，而是可以与 <code>setTimeout</code> 结合来<em>避免同时应用</em>效果的时候破坏 <code>opacity</code> 的 transition。</p>\n<div class=\"language-css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">.menu</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">opacity</span><span class=\"token punctuation\">:</span> 0<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">transition</span><span class=\"token punctuation\">:</span> opacity .2s ease<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">.menu.active</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">opacity</span><span class=\"token punctuation\">:</span> 1<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<div class=\"language-javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">toggleMenu</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> menu <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.menu'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>menu<span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">.</span><span class=\"token function\">contains</span><span class=\"token punctuation\">(</span><span class=\"token string\">'active'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        menu<span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token string\">'active'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n            menu<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>display <span class=\"token operator\">=</span> <span class=\"token string\">'none'</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">200</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n        menu<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>display <span class=\"token operator\">=</span> <span class=\"token string\">'block'</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n            menu<span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">'active'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>进入 active 状态之前将 <code>display</code> 改为正常值，然后设置一个 1 毫秒的 timeout 即可实现动画效果的正常呈现。退出 active 状态后，设置一个与 transition duration 相等时长的 timeout，等待 duration 结束后再将 <code>display</code> 改为 <code>none</code>。这样就可以避免 <code>display</code> 的切换影响动画的过渡。</p>\n<p>注意，在这里不建议除了修改 <code>display</code> 以外的其它 style 操作。对于动画的前后状态的描述应该放在 <code>.menu</code> 和 <code>.menu.active</code> 里以避免过度使用 JS 操作 DOM。</p>\n<h2>点击外部以关闭<a class=\"header-anchor\" id=\"%E7%82%B9%E5%87%BB%E5%A4%96%E9%83%A8%E4%BB%A5%E5%85%B3%E9%97%AD\" href=\"#%E7%82%B9%E5%87%BB%E5%A4%96%E9%83%A8%E4%BB%A5%E5%85%B3%E9%97%AD\">#</a></h2>\n<p>根据直觉以及一般使用的习惯而言，这样的 Menu 打开以后，可以通过单击其它部分关闭。我们在这里要首先作出一个对关闭行为的划分</p>\n<ul>\n<li>类型 1：Menu 自身逻辑导致的关闭</li>\n<li>类型 2：点击外部的关闭</li>\n</ul>\n<p>这两种关闭都是关闭，但是在实现上有所区别。先说点击外部的关闭。一个常见的做法是监听 <code>document</code> 上的任意点击事件。这样虽然有点性能上的顾虑，但实际上这也是实现这一特性所必须的监听。</p>\n<div class=\"language-javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">document<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> <span class=\"token parameter\">e</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> el <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>target <span class=\"token comment\">// as HTMLElement, in typescript</span>\n    <span class=\"token keyword\">const</span> activator <span class=\"token operator\">=</span> el<span class=\"token punctuation\">.</span><span class=\"token function\">closest</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#activator'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> menuBox <span class=\"token operator\">=</span> el<span class=\"token punctuation\">.</span><span class=\"token function\">closest</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#menu-box'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>wrapper <span class=\"token operator\">===</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">&amp;&amp;</span> activator <span class=\"token operator\">===</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">closeMenu</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 此处不应为 toggleMenu 而应是绝对的 closeMenu 操作</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n</code></pre></div>\n<p><code>activator</code> 和 <code>menuBox</code> 分别对应的是承载触发器和本体的包装父元素，它们都应该有相关的可供选择器选择的属性设置。通过上面的判断可以知道是否是点击了自身逻辑范围（即类型 2）内的元素。如果没有，那就可以认定是在“点击外部”，然后就可以直接关闭了。除此之外还可以选择性地添加一个判断 Menu 是否已经开启的逻辑。</p>\n<p>对于第二种类型，可以自行在本体内的元素设置。将这两种类型隔开有助于有序地设定相关事件。</p>\n<h2>完整代码<a class=\"header-anchor\" id=\"%E5%AE%8C%E6%95%B4%E4%BB%A3%E7%A0%81\" href=\"#%E5%AE%8C%E6%95%B4%E4%BB%A3%E7%A0%81\">#</a></h2>\n<div class=\"language-html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token script\"><span class=\"token language-javascript\">\n<span class=\"token keyword\">function</span> <span class=\"token function\">toggleMenu</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> menu <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.menu'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>menu<span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">.</span><span class=\"token function\">contains</span><span class=\"token punctuation\">(</span><span class=\"token string\">'active'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        menu<span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token string\">'active'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n            menu<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>display <span class=\"token operator\">=</span> <span class=\"token string\">'none'</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">200</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n        menu<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>display <span class=\"token operator\">=</span> <span class=\"token string\">'block'</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n            menu<span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">'active'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">&gt;</span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>style</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token style\"><span class=\"token language-css\">\n<span class=\"token selector\">.menu-wrapper</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">position</span><span class=\"token punctuation\">:</span> relative<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">.menu</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">position</span><span class=\"token punctuation\">:</span> absolute<span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">/* ... */</span>\n    <span class=\"token property\">opacity</span><span class=\"token punctuation\">:</span> 0<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">transition</span><span class=\"token punctuation\">:</span> opacity .2s ease<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">.menu.active</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">opacity</span><span class=\"token punctuation\">:</span> 1<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>style</span><span class=\"token punctuation\">&gt;</span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>menu-wrapper<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>menu-activator<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token special-attr\"><span class=\"token attr-name\">onclick</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value javascript language-javascript\"><span class=\"token function\">toggleMenu</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></span><span class=\"token punctuation\">\"</span></span></span><span class=\"token punctuation\">&gt;</span></span>Open Menu<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>menu<span class=\"token punctuation\">\"</span></span> <span class=\"token special-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value css language-css\"><span class=\"token property\">display</span><span class=\"token punctuation\">:</span> none</span><span class=\"token punctuation\">\"</span></span></span><span class=\"token punctuation\">&gt;</span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>menu-item<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>Item 1<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>menu-item<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>Item 2<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>\n<hr class=\"footnotes-sep\">\n<section class=\"footnotes\">\n<ol class=\"footnotes-list\">\n<li id=\"fn1\" class=\"footnote-item\"><p><em>link-related</em> 在这里具体是指任何可以当作是“链接”作用的元素，一些原生的例子包含 <code>a</code>、<code>button</code>，当然还可以根据用途重新自定义新的。 <a href=\"#fnref1\" class=\"footnote-backref\">↩︎</a></p>\n</li>\n</ol>\n</section>\n</div></template>","import { render } from \"./Menu-Handling.vue?vue&type=template&id=cfaae99c\"\nconst script = {}\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["class","_createStaticVNode","_hoisted_2","_createElementBlock","_hoisted_1","_hoisted_53","script","__exports__","render"],"sourceRoot":""}